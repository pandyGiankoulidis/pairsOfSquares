{"ast":null,"code":"var _jsxFileName = \"/home/pantelisg/Documents/pairsOfSquares/src/Board/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useInterval } from '../Lib/utils';\nimport sound from '../interface-124464.mp3';\nimport errorSound from '../error-1-126514.mp3';\nimport { VolumeUp, Watch, JournalBookmark } from 'react-bootstrap-icons';\nimport './Board.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 12;\nlet useSoundEffect = false;\nconst Board = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [reveals, setReveals] = useState(1);\n  const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n  const [currentCell, setCurrentCell] = useState([-1, -1]);\n  const [openCells, setOpenCells] = useState(new Set([]));\n  const [displayPlusScore, setDisplayPlusScore] = useState(-1);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [timer, setTimer] = useState(0);\n  const timeout = setTimeout(() => {\n    setDisplayPlusScore(-1);\n  }, 5000);\n  useEffect(() => {\n    window.addEventListener('onClick', e => {\n      handleClick(e);\n    });\n    return () => clearTimeout(timeout);\n  }, []);\n  useInterval(() => {\n    openCell();\n  }, 150);\n  const handleClick = e => {};\n  const openCell = () => {};\n  const applySoundEffects = event => {\n    if (event.target.checked) {\n      useSoundEffect = true;\n    } else {\n      useSoundEffect = false;\n    }\n  };\n  const revealCell = (event, cellValue) => {\n    setMousePosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n    if (openCells.has(cellValue)) {\n      return;\n    }\n    if (currentCell[1] === cellValue[1] && currentCell[0] !== cellValue[0]) {\n      playCorrect();\n      openCells.add(currentCell);\n      openCells.add(cellValue);\n      setOpenCells(openCells);\n      setScore(score + reveals * 10);\n      setReveals(reveals + 1);\n      setCurrentCell([-1, -1]);\n      setDisplayPlusScore(currentCell[0]);\n    } else {\n      if (currentCell[0] !== -1) {\n        setReveals(1);\n        playError();\n        setScore(score - 1);\n      }\n      setCurrentCell(cellValue);\n      setDisplayPlusScore(-1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"sound\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: applySoundEffects,\n        id: \"sound\",\n        name: \"sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VolumeUp, {\n        color: \"royalblue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), \" Play with Sound\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: applySoundEffects,\n        id: \"timer\",\n        name: \"timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Watch, {\n        color: \"royalblue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), \" Timer\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rules\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: applySoundEffects,\n        id: \"rules\",\n        name: \"rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(JournalBookmark, {\n        color: \"royalblue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), \" Rules\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(Watch, {\n        color: \"royalblue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), timer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((cellValue, cellIdx) => {\n          const className = getCellClassName(cellValue, currentCell, openCells);\n          const displayC = openCells.has(cellValue) || currentCell === cellValue ? cellValue[1] : '.';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: className,\n            onClick: event => revealCell(event, cellValue),\n            children: [displayC, /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: mousePosition.y - 10,\n                left: mousePosition.x,\n                color: '#ffd700',\n                fontSize: 30,\n                fontWeight: 900\n              },\n              children: displayPlusScore === cellValue[0] ? '+' + (reveals - 1) * 10 : ' '\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, cellIdx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 36\n          }, this);\n        })\n      }, rowIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n//Auxiliary consts\n_s(Board, \"iuOpw/GYJ3K+UK2kmsN72N1B6Y4=\", false, function () {\n  return [useInterval];\n});\n_c = Board;\nconst createBoard = BOARD_SIZE => {\n  let counter = 1;\n  const board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const currentRow = [];\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      currentRow.push([counter++, Math.floor(Math.random() * BOARD_SIZE) + 1]);\n    }\n    board.push(currentRow);\n  }\n  return board;\n};\nconst getCellClassName = (cellValue, currentCell, openCells) => {\n  let className = 'cell cell-red';\n  if (currentCell == cellValue) className = 'cell-revealed cell-green';\n  if (openCells.has(cellValue)) className = 'cell-revealed cell-purple';\n  return className;\n};\nfunction playCorrect() {\n  if (useSoundEffect) {\n    new Audio(sound).play();\n  }\n}\nfunction playError() {\n  if (useSoundEffect) {\n    new Audio(errorSound).play();\n  }\n}\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useInterval","sound","errorSound","VolumeUp","Watch","JournalBookmark","BOARD_SIZE","useSoundEffect","Board","score","setScore","reveals","setReveals","board","setBoard","createBoard","currentCell","setCurrentCell","openCells","setOpenCells","Set","displayPlusScore","setDisplayPlusScore","mousePosition","setMousePosition","x","y","timer","setTimer","timeout","setTimeout","window","addEventListener","e","handleClick","clearTimeout","openCell","applySoundEffects","event","target","checked","revealCell","cellValue","clientX","clientY","has","playCorrect","add","playError","map","row","rowIdx","cellIdx","className","getCellClassName","displayC","position","top","left","color","fontSize","fontWeight","counter","currentRow","col","push","Math","floor","random","Audio","play"],"sources":["/home/pantelisg/Documents/pairsOfSquares/src/Board/Board.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useInterval } from '../Lib/utils';\nimport sound from '../interface-124464.mp3';\nimport errorSound from '../error-1-126514.mp3';\nimport { VolumeUp, Watch, JournalBookmark } from 'react-bootstrap-icons';\nimport './Board.css';\n\nconst BOARD_SIZE = 12;\nlet useSoundEffect = false;\n\nconst Board = () => {\n    const [score, setScore] = useState(0);\n    const [reveals, setReveals] = useState(1);\n    const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n    const [currentCell, setCurrentCell] = useState([-1, -1]);\n    const [openCells, setOpenCells] = useState(new Set([]));\n    const [displayPlusScore, setDisplayPlusScore] = useState(-1);\n    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n    const [timer, setTimer] = useState(0);\n\n    const timeout = setTimeout(() => {\n        setDisplayPlusScore(-1);\n    }, 5000);\n\n\n    useEffect(() => {\n        window.addEventListener('onClick', e => {\n            handleClick(e);\n        });\n        return () => clearTimeout(timeout);\n    }, []);\n\n    useInterval(() => {\n        openCell();\n    }, 150);\n\n\n    const handleClick = e => {\n    };\n    const openCell = () => {\n    }\n    const applySoundEffects = event => {\n        if (event.target.checked) {\n            useSoundEffect = true;\n        } else {\n            useSoundEffect = false;\n        }\n    };\n\n    const revealCell = (event, cellValue) => {\n        setMousePosition({ x: event.clientX, y: event.clientY });\n        if (openCells.has(cellValue)) {\n            return;\n        }\n        if (currentCell[1] === cellValue[1] && currentCell[0] !== cellValue[0]) {\n            playCorrect();\n            openCells.add(currentCell);\n            openCells.add(cellValue);\n            setOpenCells(openCells);\n            setScore(score + reveals * 10);\n            setReveals(reveals + 1);\n            setCurrentCell([-1, -1]);\n            setDisplayPlusScore(currentCell[0]);\n        } else {\n            if (currentCell[0] !== -1) {\n                setReveals(1);\n                playError();\n                setScore(score - 1);\n            }\n            setCurrentCell(cellValue);\n            setDisplayPlusScore(-1);\n        }\n    }\n\n    return (\n        <>\n            <label htmlFor=\"sound\">\n                <input\n                    type=\"checkbox\"\n                    onChange={applySoundEffects}\n                    id=\"sound\"\n                    name=\"sound\"\n                />\n                <VolumeUp color=\"royalblue\" /> Play with Sound\n            </label>\n            <label htmlFor=\"timer\">\n                <input\n                    type=\"checkbox\"\n                    onChange={applySoundEffects}\n                    id=\"timer\"\n                    name=\"timer\"\n                />\n                <Watch color=\"royalblue\" /> Timer\n            </label>\n            <label htmlFor=\"rules\">\n                <input\n                    type=\"checkbox\"\n                    onChange={applySoundEffects}\n                    id=\"rules\"\n                    name=\"rules\"\n                />\n                <JournalBookmark color=\"royalblue\" /> Rules\n            </label>\n            <h1><Watch color=\"royalblue\"></Watch>{timer}</h1>\n            <h1>Score: {score}</h1>\n            <div className=\"board\">\n                {board.map((row, rowIdx) => (\n                    <div key={rowIdx} className=\"row\">\n                        {row.map((cellValue, cellIdx) => {\n                            const className = getCellClassName(\n                                cellValue,\n                                currentCell,\n                                openCells\n                            );\n                            const displayC = openCells.has(cellValue) || currentCell === cellValue ? cellValue[1] : '.';\n                            return <div key={cellIdx} className={className} onClick={event => revealCell(event, cellValue)}>\n                                {displayC}\n                                <div style={{ position: 'absolute', top: mousePosition.y - 10, left: mousePosition.x, color: '#ffd700', fontSize: 30, fontWeight: 900 }}>{displayPlusScore === cellValue[0] ? '+' + (reveals - 1) * 10 : ' '}</div>\n                            </div>\n                        })}\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n\n//Auxiliary consts\nconst createBoard = BOARD_SIZE => {\n    let counter = 1;\n    const board = [];\n    for (let row = 0; row < BOARD_SIZE; row++) {\n        const currentRow = [];\n        for (let col = 0; col < BOARD_SIZE; col++) {\n            currentRow.push([counter++, Math.floor(Math.random() * (BOARD_SIZE)) + 1]);\n        }\n        board.push(currentRow);\n    }\n    return board;\n};\n\nconst getCellClassName = (\n    cellValue,\n    currentCell,\n    openCells\n) => {\n    let className = 'cell cell-red';\n\n    if (currentCell == cellValue) className = 'cell-revealed cell-green';\n    if (openCells.has(cellValue)) className = 'cell-revealed cell-purple';\n    return className;\n};\n\nfunction playCorrect() {\n    if (useSoundEffect) {\n        new Audio(sound).play();\n    }\n}\n\nfunction playError() {\n    if (useSoundEffect) {\n        new Audio(errorSound).play();\n    }\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}