{"ast":null,"code":"var _jsxFileName = \"/home/pantelisg/Documents/pairsOfSquares/src/Board/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useInterval } from '../Lib/utils';\nimport './Board.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 10;\nconst Board = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n  const [currentCell, setCurrentCell] = useState(new Set({\n    cell: -1\n  }));\n  const [openCells, setOpenCells] = useState(new Set([]));\n  useEffect(() => {\n    window.addEventListener('onClick', e => {\n      console.log(\"JUST CLICKED ONCE!!\");\n      handleClick(e);\n    });\n  }, []);\n  useInterval(() => {\n    openCell();\n  }, 150);\n  const handleClick = e => {\n    console.log(\"CLICKED\");\n    openCells.add([30]);\n  };\n  const openCell = () => {\n    console.log(\"open cell\");\n    openCells.add([30]);\n  };\n  const revealCell = (event, keyRow, keyCell) => {\n    setCurrentCell(new Set([keyRow * BOARD_SIZE + keyCell + 1]));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((cellValue, cellIdx) => {\n          const className = getCellClassName(cellValue, currentCell, openCells);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: className,\n            onClick: event => revealCell(event, rowIdx, cellIdx)\n          }, cellIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 36\n          }, this);\n        })\n      }, rowIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n//Auxiliary consts\n_s(Board, \"JXzB8JrJAaYDJf4aKZhGeMRWALk=\", false, function () {\n  return [useInterval];\n});\n_c = Board;\nconst createBoard = BOARD_SIZE => {\n  let counter = 1;\n  const board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const currentRow = [];\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      currentRow.push(counter++);\n    }\n    board.push(currentRow);\n  }\n  return board;\n};\nconst getCellClassName = (cellValue, currentCell, openCells) => {\n  let className = 'cell cell-red';\n  if (currentCell.cell.has(cellValue)) className = 'cell cell-green';\n  if (openCells.has(cellValue)) className = 'cell cell-purple';\n  return className;\n};\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useInterval","BOARD_SIZE","Board","score","setScore","board","setBoard","createBoard","currentCell","setCurrentCell","Set","cell","openCells","setOpenCells","window","addEventListener","e","console","log","handleClick","openCell","add","revealCell","event","keyRow","keyCell","map","row","rowIdx","cellValue","cellIdx","className","getCellClassName","counter","currentRow","col","push","has"],"sources":["/home/pantelisg/Documents/pairsOfSquares/src/Board/Board.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useInterval } from '../Lib/utils';\n\nimport './Board.css';\nconst BOARD_SIZE = 10;\n\nconst Board = () => {\n    const [score, setScore] = useState(0);\n    const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n    const [currentCell, setCurrentCell] = useState(new Set({ cell: -1 }));\n    const [openCells, setOpenCells] = useState(new Set([]));\n\n    useEffect(() => {\n        window.addEventListener('onClick', e => {\n            console.log(\"JUST CLICKED ONCE!!\")\n            handleClick(e);\n        });\n    }, []);\n\n    useInterval(() => {\n        openCell();\n    }, 150);\n\n\n    const handleClick = e => {\n        console.log(\"CLICKED\");\n        openCells.add([30])\n    };\n    const openCell = () => {\n        console.log(\"open cell\")\n        openCells.add([30])\n    }\n\n\n    const revealCell = (event, keyRow, keyCell) => {\n        setCurrentCell(new Set([keyRow * BOARD_SIZE + keyCell + 1]))\n    }\n\n    return (\n        <>\n            <h1>Score: {score}</h1>\n            <div className=\"board\">\n                {board.map((row, rowIdx) => (\n                    <div key={rowIdx} className=\"row\">\n                        {row.map((cellValue, cellIdx) => {\n                            const className = getCellClassName(\n                                cellValue,\n                                currentCell,\n                                openCells\n                            );\n                            return <div key={cellIdx} className={className} onClick={event => revealCell(event, rowIdx, cellIdx)}></div>;\n                        })}\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n\n//Auxiliary consts\nconst createBoard = BOARD_SIZE => {\n    let counter = 1;\n    const board = [];\n    for (let row = 0; row < BOARD_SIZE; row++) {\n        const currentRow = [];\n        for (let col = 0; col < BOARD_SIZE; col++) {\n            currentRow.push(counter++);\n        }\n        board.push(currentRow);\n    }\n    return board;\n};\n\nconst getCellClassName = (\n    cellValue,\n    currentCell,\n    openCells\n) => {\n    let className = 'cell cell-red';\n\n    if (currentCell.cell.has(cellValue)) className = 'cell cell-green';\n    if (openCells.has(cellValue)) className = 'cell cell-purple';\n    return className;\n};\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}