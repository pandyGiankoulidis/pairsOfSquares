{"ast":null,"code":"var _jsxFileName = \"/home/pantelisg/Documents/pairsOfSquares/src/Board/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useInterval } from '../Lib/utils';\nimport sound from '../interface-124464.mp3';\nimport errorSound from '../error-1-126514.mp3';\nimport { VolumeUp, VolumeMute, CaretLeftFill, Watch, PlayCircle, PauseCircle, Speedometer2 } from 'react-bootstrap-icons';\nimport Button from \"react-bootstrap/Button\";\nimport './Board.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 12;\nconst Board = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [reveals, setReveals] = useState(1);\n  const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n  const [currentCell, setCurrentCell] = useState([-1, -1]);\n  const [openCells, setOpenCells] = useState(new Set([]));\n  const [displayPlusScore, setDisplayPlusScore] = useState(-1);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [timer, setTimer] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [hsTime, setHsTime] = useState(0);\n  const [paused, setPaused] = useState(true);\n  const [useSoundEffect, setUseSoundEffect] = useState(true);\n  const timeout = setTimeout(() => {\n    setDisplayPlusScore(-1);\n  }, 5000);\n  useEffect(() => {\n    window.addEventListener('onClick', e => {\n      handleClick(e);\n    });\n    return () => clearTimeout(timeout);\n  }, []);\n  useInterval(() => {\n    openCell();\n  }, 150);\n  const handleClick = e => {};\n  const openCell = () => {};\n  const applySoundEffects = event => {\n    if (useSoundEffect) {\n      setUseSoundEffect(false);\n    } else {\n      setUseSoundEffect(true);\n    }\n  };\n  const revealCell = (event, cellValue) => {\n    if (paused) {\n      return;\n    }\n    setMousePosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n    if (openCells.has(cellValue)) {\n      return;\n    }\n    if (currentCell[1] === cellValue[1] && currentCell[0] !== cellValue[0]) {\n      playCorrect(useSoundEffect);\n      openCells.add(currentCell);\n      openCells.add(cellValue);\n      setOpenCells(openCells);\n      setScore(score + reveals * 10);\n      setReveals(reveals + 1);\n      setCurrentCell([-1, -1]);\n      setDisplayPlusScore(currentCell[0]);\n    } else {\n      if (currentCell[0] !== -1) {\n        setReveals(1);\n        playError(useSoundEffect);\n        setScore(score - 1);\n      }\n      setCurrentCell(cellValue);\n      setDisplayPlusScore(-1);\n    }\n  };\n  const pauseGame = () => {\n    setPaused(true);\n  };\n  const unpauseGame = () => {\n    setPaused(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(Speedometer2, {\n        color: \"royalblue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), \" \", highScore, \" pts. in \", hsTime, \" sec.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Score: \", score, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Watch, {\n        color: \"royalblue\",\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 18\n      }, this), \" \", timer, \" sec.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"customButton\",\n        onClick: paused ? unpauseGame : pauseGame,\n        children: paused ? /*#__PURE__*/_jsxDEV(PlayCircle, {\n          class: \"customPlayPause\",\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 99\n        }, this) : /*#__PURE__*/_jsxDEV(PauseCircle, {\n          class: \"customPlayPause\",\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 163\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CaretLeftFill, {\n        class: \"customPlayPause\",\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"customButton\",\n        onClick: applySoundEffects,\n        children: useSoundEffect ? /*#__PURE__*/_jsxDEV(VolumeUp, {\n          class: \"customPlayPause\",\n          color: \"royalblue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 92\n        }, this) : /*#__PURE__*/_jsxDEV(VolumeMute, {\n          class: \"customPlayPause\",\n          color: \"royalblue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((cellValue, cellIdx) => {\n          const className = getCellClassName(cellValue, currentCell, openCells);\n          const displayC = openCells.has(cellValue) || currentCell === cellValue ? cellValue[1] : '.';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: className,\n            onClick: event => revealCell(event, cellValue),\n            children: [displayC, /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: mousePosition.y - 10,\n                left: mousePosition.x,\n                color: '#ffd700',\n                fontSize: 30,\n                fontWeight: 900\n              },\n              children: displayPlusScore === cellValue[0] ? '+' + (reveals - 1) * 10 : ' '\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)]\n          }, cellIdx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 36\n          }, this);\n        })\n      }, rowIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n//Auxiliary consts\n_s(Board, \"Pv7/Wo7Tme2+1O+QagoTpYzPABI=\", false, function () {\n  return [useInterval];\n});\n_c = Board;\nconst createBoard = BOARD_SIZE => {\n  let counter = 1;\n  const board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const currentRow = [];\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      currentRow.push([counter++, Math.floor(Math.random() * BOARD_SIZE) + 1]);\n    }\n    board.push(currentRow);\n  }\n  return board;\n};\nconst getCellClassName = (cellValue, currentCell, openCells) => {\n  let className = 'cell cell-red';\n  if (currentCell == cellValue) className = 'cell-revealed cell-green';\n  if (openCells.has(cellValue)) className = 'cell-revealed cell-purple';\n  return className;\n};\nfunction playCorrect(toplay) {\n  if (toplay) {\n    new Audio(sound).play();\n  }\n}\nfunction playError(toplay) {\n  if (toplay) {\n    new Audio(errorSound).play();\n  }\n}\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useInterval","sound","errorSound","VolumeUp","VolumeMute","CaretLeftFill","Watch","PlayCircle","PauseCircle","Speedometer2","Button","BOARD_SIZE","Board","score","setScore","reveals","setReveals","board","setBoard","createBoard","currentCell","setCurrentCell","openCells","setOpenCells","Set","displayPlusScore","setDisplayPlusScore","mousePosition","setMousePosition","x","y","timer","setTimer","highScore","setHighScore","hsTime","setHsTime","paused","setPaused","useSoundEffect","setUseSoundEffect","timeout","setTimeout","window","addEventListener","e","handleClick","clearTimeout","openCell","applySoundEffects","event","revealCell","cellValue","clientX","clientY","has","playCorrect","add","playError","pauseGame","unpauseGame","map","row","rowIdx","cellIdx","className","getCellClassName","displayC","position","top","left","color","fontSize","fontWeight","counter","currentRow","col","push","Math","floor","random","toplay","Audio","play"],"sources":["/home/pantelisg/Documents/pairsOfSquares/src/Board/Board.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useInterval } from '../Lib/utils';\nimport sound from '../interface-124464.mp3';\nimport errorSound from '../error-1-126514.mp3';\nimport { VolumeUp, VolumeMute, CaretLeftFill, Watch, PlayCircle, PauseCircle, Speedometer2 } from 'react-bootstrap-icons';\nimport Button from \"react-bootstrap/Button\";\nimport './Board.css';\n\nconst BOARD_SIZE = 12;\n\nconst Board = () => {\n    const [score, setScore] = useState(0);\n    const [reveals, setReveals] = useState(1);\n    const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n    const [currentCell, setCurrentCell] = useState([-1, -1]);\n    const [openCells, setOpenCells] = useState(new Set([]));\n    const [displayPlusScore, setDisplayPlusScore] = useState(-1);\n    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n    const [timer, setTimer] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n    const [hsTime, setHsTime] = useState(0);\n    const [paused, setPaused] = useState(true);\n    const [useSoundEffect, setUseSoundEffect] = useState(true);\n\n    const timeout = setTimeout(() => {\n        setDisplayPlusScore(-1);\n    }, 5000);\n\n\n    useEffect(() => {\n        window.addEventListener('onClick', e => {\n            handleClick(e);\n        });\n        return () => clearTimeout(timeout);\n    }, []);\n\n    useInterval(() => {\n        openCell();\n    }, 150);\n\n\n    const handleClick = e => {\n    };\n    const openCell = () => {\n    }\n    const applySoundEffects = event => {\n        if (useSoundEffect) {\n            setUseSoundEffect(false);\n        } else {\n            setUseSoundEffect(true);\n        }\n    };\n\n    const revealCell = (event, cellValue) => {\n        if (paused) {\n            return;\n        }\n        setMousePosition({ x: event.clientX, y: event.clientY });\n        if (openCells.has(cellValue)) {\n            return;\n        }\n        if (currentCell[1] === cellValue[1] && currentCell[0] !== cellValue[0]) {\n            playCorrect(useSoundEffect);\n            openCells.add(currentCell);\n            openCells.add(cellValue);\n            setOpenCells(openCells);\n            setScore(score + reveals * 10);\n            setReveals(reveals + 1);\n            setCurrentCell([-1, -1]);\n            setDisplayPlusScore(currentCell[0]);\n        } else {\n            if (currentCell[0] !== -1) {\n                setReveals(1);\n                playError(useSoundEffect);\n                setScore(score - 1);\n            }\n            setCurrentCell(cellValue);\n            setDisplayPlusScore(-1);\n        }\n    }\n\n    const pauseGame = () => {\n        setPaused(true);\n    }\n\n    const unpauseGame = () => {\n        setPaused(false);\n    }\n\n    return (\n        <>\n            <h3><Speedometer2 color=\"royalblue\"></Speedometer2> {highScore} pts. in {hsTime} sec.</h3>\n            <h3>Score: {score} </h3>\n            <h3> <Watch color=\"royalblue\">:</Watch> {timer} sec.</h3>\n            <h3><button class=\"customButton\" onClick={paused ? unpauseGame : pauseGame}>{paused ? <PlayCircle class=\"customPlayPause\" color=\"red\"></PlayCircle> : <PauseCircle class=\"customPlayPause\" color=\"red\"></PauseCircle>}</button>\n                <CaretLeftFill class=\"customPlayPause\" color=\"red\"></CaretLeftFill>\n                <button class=\"customButton\" onClick={applySoundEffects}>{useSoundEffect ? <VolumeUp class=\"customPlayPause\" color=\"royalblue\"></VolumeUp> :\n                    <VolumeMute class=\"customPlayPause\" color=\"royalblue\"></VolumeMute>}</button></h3>\n            <div className=\"board\">\n                {board.map((row, rowIdx) => (\n                    <div key={rowIdx} className=\"row\">\n                        {row.map((cellValue, cellIdx) => {\n                            const className = getCellClassName(\n                                cellValue,\n                                currentCell,\n                                openCells\n                            );\n                            const displayC = openCells.has(cellValue) || currentCell === cellValue ? cellValue[1] : '.';\n                            return <div key={cellIdx} className={className} onClick={event => revealCell(event, cellValue)}>\n                                {displayC}\n                                <div style={{ position: 'absolute', top: mousePosition.y - 10, left: mousePosition.x, color: '#ffd700', fontSize: 30, fontWeight: 900 }}>{displayPlusScore === cellValue[0] ? '+' + (reveals - 1) * 10 : ' '}</div>\n                            </div>\n                        })}\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n\n//Auxiliary consts\nconst createBoard = BOARD_SIZE => {\n    let counter = 1;\n    const board = [];\n    for (let row = 0; row < BOARD_SIZE; row++) {\n        const currentRow = [];\n        for (let col = 0; col < BOARD_SIZE; col++) {\n            currentRow.push([counter++, Math.floor(Math.random() * (BOARD_SIZE)) + 1]);\n        }\n        board.push(currentRow);\n    }\n    return board;\n};\n\nconst getCellClassName = (\n    cellValue,\n    currentCell,\n    openCells\n) => {\n    let className = 'cell cell-red';\n\n    if (currentCell == cellValue) className = 'cell-revealed cell-green';\n    if (openCells.has(cellValue)) className = 'cell-revealed cell-purple';\n    return className;\n};\n\nfunction playCorrect(toplay) {\n    if (toplay) {\n        new Audio(sound).play();\n    }\n}\n\nfunction playError(toplay) {\n    if (toplay) {\n        new Audio(errorSound).play();\n    }\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}